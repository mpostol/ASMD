<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="CAS.UA.Server" type="Opc.Ua.ApplicationConfigurationSection,Opc.Ua.Core" />
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="CAS.UA.Server.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="configfile" value="" />
    <add key="PLCNaN" value="" />
    <add key="MinAvgMax_FrameResponse_management" value="20" />
    <add key="MinAvgMax_CharacterGap_management" value="500" />
    <add key="MinAvgMax_Tag_management" value="20" />
    <add key="MinAvgMax_Group_management" value="20" />
    <add key="MinAvgMax_Group_Read_management" value="20" />
    <add key="MinAvgMax_Transaction_management" value="20" />
    <add key="WaitForReconnectServerInSec" value="30" />
    <add key="WaitForFirstGroupUpdateSendInMiliSec" value="1000" />
    <add key="UseLocalTime" value="False" />
    <add key="UseTimeStampToCheckForUpdate" value="" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <!-- CommServer specific:-->
    <add key="ConsoleRemotingHTTPport" value="5758"/> <!-- CommServer Engine inside CommServer UA uses this console remotting port (default + 1)-->
    <add key="UseLocalTime" value="False"/>
    <add key="UseTimeStampToCheckForUpdate" value="False"/>
    <add key="MinAvgMax_Transaction_management" value="20"/>
  </appSettings>
  <system.serviceModel>
    <!-- 
      UA servers built with the SDK use the Opc.Ua.SessionEndpoint class to implement the ISessionEndpoint 
      contract. It is possible to add additional behavoirs in the configuration file by referencing this 
      service. For example, the configuration in this file turns on metadata publishing. 
    -->
    <services>
      <service name="Opc.Ua.SessionEndpoint" behaviorConfiguration="Opc.Ua.SessionEndpoint.Behavior">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <!-- Servers deployed in production environments should turn the httpGetEnabled and includeExceptionDetailInFaults options off -->
    <behaviors>
      <serviceBehaviors>
        <behavior name="Opc.Ua.SessionEndpoint.Behavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--
          <serviceThrottling maxConcurrentCalls="100"
          maxConcurrentInstances="100"
          maxConcurrentSessions="100"/>-->
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--
      Uncommenting this <diagnostics> block will turn on message logging. The contents and the location of the
      log file are specified in the  <system.diagnostics> block.
    -->
    <!--
    <diagnostics>
      <messageLogging logEntireMessage="true" maxMessagesToLog="3000" logMessagesAtServiceLevel="true" logMalformedMessages="true" logMessagesAtTransportLevel="true"/>
    </diagnostics>
    -->
  </system.serviceModel>
  <!--
  <system.diagnostics>
		<sources>
			<source name="System.ServiceModel" switchValue="Verbose, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="ServiceModel Listener"/>
				</listeners>
			</source>
			<source name="System.ServiceModel.MessageLogging">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="ServiceModel Listener"/>
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add initializeData="Opc.Ua.SampleServer.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModel Listener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack"/>
    </sharedListeners> 
  </system.diagnostics>
  -->
  <CAS.UA.Server>
    <ConfigurationLocation xmlns="http://opcfoundation.org/UA/SDK/Configuration.xsd">
      <FilePath>IOPWConfiguration\CAS.UAServer.DemoConfiguration.uasconfig</FilePath>
    </ConfigurationLocation>
  </CAS.UA.Server>
  <applicationSettings>
    <CAS.UA.Server.Properties.Settings>
      <setting name="ConfigurationFilePath" serializeAs="String">
        <value>IOPWConfiguration\CAS.UAServer.DemoConfiguration.uasconfig</value>
      </setting>
    </CAS.UA.Server.Properties.Settings>
</applicationSettings>
  <system.diagnostics>
    <sources>
      <source name="TracesFromEventLogMonitor" switchName="EventLogMonitor" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="LogFile" />
          <remove name="Default" />
        </listeners>
      </source>
      <source name="CAS.Lib.OPCClient.Da" switchName="CAS.Lib.OPCClient.Da" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="LogFile" />
          <remove name="Default" />
        </listeners>
      </source>
      <source name="CAS.UA.Server.DataBindings.TraceEvent" switchName="CAS.UA.Server.DataBindings.TraceEvent" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="LogFile" />
          <remove name="Default" />
        </listeners>
      </source>
      <source name="CAS.UA.Server.TraceEvent" switchName="CAS.UA.Server.TraceEvent" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="LogFile" />
          <remove name="Default" />
        </listeners>
      </source>
      <source name="TraceNet_to_Serial" switchName="Net_to_Serial" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <!--
          <add name="console"
            type="System.Diagnostics.ConsoleTraceListener">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Warning"/>
          </add>
          -->
          <add name="DebugOutput" />
          <add name="LogFile" />
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="CAS.BaseStation.TraceEvent" switchName="BaseStationTrace" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="DebugOutput" />
          <add name="LogFile" />
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="CAS.BaseStation.InitialisationTrace" switchName="InitialisationTrace" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="DebugOutput" />
          <add name="LogFile" />
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="NetworkConfig.ApplicationProtocol" switchName="NetworkConfig" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="ConfigLogFile" />
          <remove name="Default"/>
        </listeners>
      </source>
      <!-- ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.VisualStudio.v80.en/dv_fxnetwork/html/5ef9fe4b-8d3d-490e-9259-1d014b2181af.htm -->
      <source name ="System.Net.Sockets" >
        <listeners>
          <add name="LogFile"/>
          <add name="DebugOutput" />
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="CAS.Lib.CommServer" switchName="CAS.Lib.CommServer" switchType="System.Diagnostics.SourceSwitch"  >
        <listeners>
          <add name="DebugOutput"/>
          <add name="LogFile" />
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="CAS.Lib.RTLib" switchName="CAS.Lib.CommServer" switchType="System.Diagnostics.SourceSwitch"  >
        <listeners>
          <add name="DebugOutput"/>
          <add name="LogFile"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="TraceUMessage" switchName="swTraceUMessage" switchType="System.Diagnostics.SourceSwitch"  >
        <listeners>
          <add name="DebugOutput"/>
          <add name="LogFile"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="SBUSbase_message" switchName="swSBUSbase_message" switchType="System.Diagnostics.SourceSwitch"  >
        <listeners>
          <add name="DebugOutput"/>
          <add name="LogFile"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <source name="CAS.BaseStation.Transactions" switchName="CAS_BaseStation_Transactions" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <!--<add name="console"
            type="System.Diagnostics.ConsoleTraceListener">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="All"/>
          </add>-->
          <!--<add name="DebugOutput" />-->
          <add name="LogFile" />
          <remove name="Default" />
        </listeners>
      </source>
    </sources>
    <switches>
      <!--ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.NETDEVFX.v20.en/cpref6/html/T_System_Diagnostics_SourceLevels.htm-->
      <!-- SourceLevels Enumeration -->
      <add name="EventLogMonitor" value="Warning" />
      <add name="CAS_BaseStation_Transactions" value="Warning" />
      <add name="CAS.UA.Server.DataBindings.TraceEvent" value="All" />
      <add name="CAS.UA.Server.TraceEvent" value="All" />
      <add name="CAS.Lib.OPCClient.Da" value="Information" />
      <add name="swTraceUMessage" value="Warning" />
      <add name="swSBUSbase_message" value="Warning" />
      <add name="NetworkConfig" value="Warning" />
      <add name="Net_to_Serial" value="Warning" />
      <add name="RS_to_Serial" value="Warning" />
      <add name="CAPI_to_Serial" value="Warning" />
      <add name="InitialisationTrace" value="Warning" />
      <add name="BaseStationTrace" value="Warning" />
      <add name="CAS.Lib.CommServer" value="Warning"/>
      <add name="System.Net.Sockets" value="Warning" />
      <!-- value:  Required String attribute. Sets the verbosity of the output. 
                  Legitimate values are Critical, Error, Verbose, Warning, and Information.
      -->
      <!-- maxdatasize:  Optional Int32 attribute. Sets the maximum number of bytes of network data included in each line trace. 
                         The default value is 1024.
      -->
      <!-- tracemode Optional String attribute. Set to includehex to show protocol traces in hexadecimal and text format. 
      Set to protocolonly to show only text. The default value is includehex.
      -->
    </switches>
    <sharedListeners>
      <add name ="DebugOutput" type ="System.Diagnostics.ConsoleTraceListener" initializeData ="false">
        <!-- Allows all events through. -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="All" /> -->
        <!-- Allows the Stop, Start, Suspend, Transfer, and Resume events through. -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="ActivityTracing" /> -->
        <!-- Allows only Critical events through.  -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="Critical" /> -->
        <!-- Allows Critical and Error events through.  -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="Error" /> -->
        <!-- Allows Critical, Error, Warning, and Information events through. -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="Information" /> -->
        <!-- Does not allow any events through. -->
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Off" />
        <!-- Allows Critical, Error, Warning, Information, and Verbose events through.  -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="Verbose" /> -->
        <!-- Allows Critical, Error, and Warning events through. -->
        <!-- <filter type="System.Diagnostics.EventTypeFilter" initializeData="Warning" /> -->
      </add>
      <add name="LogFile" type="System.Diagnostics.DelimitedListTraceListener" initializeData="CAS.OPC.UA.Server.log" traceOutputOptions="DateTime">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="All" />
      </add>
      <add name="ConfigLogFile" type="System.Diagnostics.DelimitedListTraceListener" initializeData ="NetworkConfig.log" traceOutputOptions="DateTime">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="All" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>