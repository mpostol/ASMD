<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssemblyLoadErropr" xml:space="preserve">
    <value>Unable to load the selected assembly or it does not provide required interface</value>
  </data>
  <data name="CASConfiguration_MessageBox_configuration_file_exception" xml:space="preserve">
    <value>There was problem during opening the configuration form file:
{0}
Application will continue but the configuration is default.</value>
  </data>
  <data name="CASConfiguration_MessageBox_configuration_file_save_exception" xml:space="preserve">
    <value>There was problem during saving the configuration to file:
{0}
Application will continue but the configuration is not saved.</value>
  </data>
  <data name="CASConfiguration_MessageBox_plugin_file_exception" xml:space="preserve">
    <value>There was problem during opening the plugin form file (file not found):
{0} 
Application will continue but the plugin remains unloaded.</value>
  </data>
  <data name="ConfigurationWrapperNoFolderSelectedHeader" xml:space="preserve">
    <value>No folder is selected</value>
  </data>
  <data name="ConfigurationWrapperNoFolderSelectedInfo" xml:space="preserve">
    <value>Folder is not selected, configuration will be created in the default location.</value>
  </data>
  <data name="ConfigurationWrapperProblemWithOpeningOfTheFileHeader" xml:space="preserve">
    <value>Problem with file</value>
  </data>
  <data name="ConfigurationWrapperProblemWithOpeningOfTheFileInfo" xml:space="preserve">
    <value>A problem appears during opening of the file. The cause of the problem was:</value>
  </data>
  <data name="ConfigurationWrapper_NoConfigurationFileSelectedHeader" xml:space="preserve">
    <value>No configuration file has been selected!</value>
  </data>
  <data name="ConfigurationWrapper_NoConfigurationFileSelectedInfo" xml:space="preserve">
    <value>You did not choose the configuration file. Please select a location of the default configuration file.</value>
  </data>
  <data name="InterfaceNotImplemented" xml:space="preserve">
    <value>The selected assembly does not implement the required configuration editor interface.</value>
  </data>
  <data name="LicenseFeatureUnavailable" xml:space="preserve">
    <value>The feature is unavailable because your license does not include this functionality.</value>
  </data>
  <data name="Main_Default_ConfigurationFileName" xml:space="preserve">
    <value>CAS.UAServer.Configuration</value>
    <comment>CAS.UA.Model.Designer.Configuration.ConfigurationWrapper</comment>
  </data>
  <data name="Main_Default_ConfigurationFileNametExtension" xml:space="preserve">
    <value>uasconfig</value>
    <comment>CAS.UA.Model.Designer.Configuration.ConfigurationWrapper</comment>
  </data>
  <data name="MenuCloseText" xml:space="preserve">
    <value>Close</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuCloseToolTip" xml:space="preserve">
    <value>Close the configuration file.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuConfigurationText" xml:space="preserve">
    <value>Configuration</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuConfigurationToolTip" xml:space="preserve">
    <value>Menu items to manage and edit configuration file used by the attached plug-in to save
configuration proprietary information of the UA server.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuEditText" xml:space="preserve">
    <value>Edit ...</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuEditToolTip" xml:space="preserve">
    <value>Edit the configuration file.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuNewText" xml:space="preserve">
    <value>New ...</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuNewToolTip" xml:space="preserve">
    <value>Creates new empty configuration file that is to be used by the attached 
editor to store proprietary configuration information of the UA server.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuOpenText" xml:space="preserve">
    <value>Open ...</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuOpenToolTip" xml:space="preserve">
    <value>Opens existing configuration file that is to be used by the attached 
editor to store proprietary configuration information of the UA server.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuSaveAsText" xml:space="preserve">
    <value>Save As ...</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuSaveAsToolTip" xml:space="preserve">
    <value>Opens dialog window to save the current configuration at a specified 
location in a specified file format.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuSaveText" xml:space="preserve">
    <value>Save</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuSaveToolTip" xml:space="preserve">
    <value>Save the configuration file.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerWrapper</comment>
  </data>
  <data name="MenuUAServerRemovetText" xml:space="preserve">
    <value>Remove editor</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerSelector</comment>
  </data>
  <data name="MenuUAServerRemovetToolTip" xml:space="preserve">
    <value>Remove the currently selected plug-in that is to provide 
configuration utilities in the context of the model.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerSelector</comment>
  </data>
  <data name="MenuUAServerSelectText" xml:space="preserve">
    <value>Select editor ...</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerSelector</comment>
  </data>
  <data name="MenuUAServerSelectToolTip" xml:space="preserve">
    <value>Select and attaches a plug-in that is to provide UA server configuration 
editor and data source bindings functionality.</value>
    <comment>CAS.UA.Model.Designer.Configuration.ServerSelector</comment>
  </data>
  <data name="OpenPluginFilter" xml:space="preserve">
    <value>Plug-in files (* .dll)|*.dll|Plug-in files (* .exe)|*.exe|All files (*.*)|*.*</value>
  </data>
  <data name="OpenPluginTitle" xml:space="preserve">
    <value>Open configuration editor</value>
  </data>
  <data name="OpenPluginWarningNotExist" xml:space="preserve">
    <value>Cannot open the file</value>
  </data>
  <data name="PropertyUnavailable" xml:space="preserve">
    <value>Property unavailable</value>
  </data>
  <data name="UAServerConfigurationTitle" xml:space="preserve">
    <value>UA Server configuration file</value>
  </data>
</root>