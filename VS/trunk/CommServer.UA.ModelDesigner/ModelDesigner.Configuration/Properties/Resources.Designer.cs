//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.CommServer.UA.ModelDesigner.Configuration.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CAS.CommServer.UA.ModelDesigner.Configuration.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the selected assembly or it does not provide required interface.
        /// </summary>
        internal static string AssemblyLoadErropr {
            get {
                return ResourceManager.GetString("AssemblyLoadErropr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was problem during opening the configuration form file:
        ///{0}
        ///Application will continue but the configuration is default..
        /// </summary>
        internal static string CASConfiguration_MessageBox_configuration_file_exception {
            get {
                return ResourceManager.GetString("CASConfiguration_MessageBox_configuration_file_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was problem during saving the configuration to file:
        ///{0}
        ///Application will continue but the configuration is not saved..
        /// </summary>
        internal static string CASConfiguration_MessageBox_configuration_file_save_exception {
            get {
                return ResourceManager.GetString("CASConfiguration_MessageBox_configuration_file_save_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was problem during opening the plugin form file (file not found):
        ///{0} 
        ///Application will continue but the plugin remains unloaded..
        /// </summary>
        internal static string CASConfiguration_MessageBox_plugin_file_exception {
            get {
                return ResourceManager.GetString("CASConfiguration_MessageBox_plugin_file_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No configuration file has been selected!.
        /// </summary>
        internal static string ConfigurationWrapper_NoConfigurationFileSelectedHeader {
            get {
                return ResourceManager.GetString("ConfigurationWrapper_NoConfigurationFileSelectedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You did not choose the configuration file. Please select a location of the default configuration file..
        /// </summary>
        internal static string ConfigurationWrapper_NoConfigurationFileSelectedInfo {
            get {
                return ResourceManager.GetString("ConfigurationWrapper_NoConfigurationFileSelectedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No folder is selected.
        /// </summary>
        internal static string ConfigurationWrapperNoFolderSelectedHeader {
            get {
                return ResourceManager.GetString("ConfigurationWrapperNoFolderSelectedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder is not selected, configuration will be created in the default location..
        /// </summary>
        internal static string ConfigurationWrapperNoFolderSelectedInfo {
            get {
                return ResourceManager.GetString("ConfigurationWrapperNoFolderSelectedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem with file.
        /// </summary>
        internal static string ConfigurationWrapperProblemWithOpeningOfTheFileHeader {
            get {
                return ResourceManager.GetString("ConfigurationWrapperProblemWithOpeningOfTheFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem appears during opening of the file. The cause of the problem was:.
        /// </summary>
        internal static string ConfigurationWrapperProblemWithOpeningOfTheFileInfo {
            get {
                return ResourceManager.GetString("ConfigurationWrapperProblemWithOpeningOfTheFileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected assembly does not implement the required configuration editor interface..
        /// </summary>
        internal static string InterfaceNotImplemented {
            get {
                return ResourceManager.GetString("InterfaceNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature is unavailable because your license does not include this functionality..
        /// </summary>
        internal static string LicenseFeatureUnavailable {
            get {
                return ResourceManager.GetString("LicenseFeatureUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAS.UAServer.Configuration.
        /// </summary>
        internal static string Main_Default_ConfigurationFileName {
            get {
                return ResourceManager.GetString("Main_Default_ConfigurationFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uasconfig.
        /// </summary>
        internal static string Main_Default_ConfigurationFileNametExtension {
            get {
                return ResourceManager.GetString("Main_Default_ConfigurationFileNametExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string MenuCloseText {
            get {
                return ResourceManager.GetString("MenuCloseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close the configuration file..
        /// </summary>
        internal static string MenuCloseToolTip {
            get {
                return ResourceManager.GetString("MenuCloseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        internal static string MenuConfigurationText {
            get {
                return ResourceManager.GetString("MenuConfigurationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu items to manage and edit configuration file used by the attached plug-in to save
        ///configuration proprietary information of the UA server..
        /// </summary>
        internal static string MenuConfigurationToolTip {
            get {
                return ResourceManager.GetString("MenuConfigurationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit ....
        /// </summary>
        internal static string MenuEditText {
            get {
                return ResourceManager.GetString("MenuEditText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit the configuration file..
        /// </summary>
        internal static string MenuEditToolTip {
            get {
                return ResourceManager.GetString("MenuEditToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New ....
        /// </summary>
        internal static string MenuNewText {
            get {
                return ResourceManager.GetString("MenuNewText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates new empty configuration file that is to be used by the attached 
        ///editor to store proprietary configuration information of the UA server..
        /// </summary>
        internal static string MenuNewToolTip {
            get {
                return ResourceManager.GetString("MenuNewToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open ....
        /// </summary>
        internal static string MenuOpenText {
            get {
                return ResourceManager.GetString("MenuOpenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens existing configuration file that is to be used by the attached 
        ///editor to store proprietary configuration information of the UA server..
        /// </summary>
        internal static string MenuOpenToolTip {
            get {
                return ResourceManager.GetString("MenuOpenToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save As ....
        /// </summary>
        internal static string MenuSaveAsText {
            get {
                return ResourceManager.GetString("MenuSaveAsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens dialog window to save the current configuration at a specified 
        ///location in a specified file format..
        /// </summary>
        internal static string MenuSaveAsToolTip {
            get {
                return ResourceManager.GetString("MenuSaveAsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        internal static string MenuSaveText {
            get {
                return ResourceManager.GetString("MenuSaveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the configuration file..
        /// </summary>
        internal static string MenuSaveToolTip {
            get {
                return ResourceManager.GetString("MenuSaveToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove editor.
        /// </summary>
        internal static string MenuUAServerRemovetText {
            get {
                return ResourceManager.GetString("MenuUAServerRemovetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the currently selected plug-in that is to provide 
        ///configuration utilities in the context of the model..
        /// </summary>
        internal static string MenuUAServerRemovetToolTip {
            get {
                return ResourceManager.GetString("MenuUAServerRemovetToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select editor ....
        /// </summary>
        internal static string MenuUAServerSelectText {
            get {
                return ResourceManager.GetString("MenuUAServerSelectText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select and attaches a plug-in that is to provide UA server configuration 
        ///editor and data source bindings functionality..
        /// </summary>
        internal static string MenuUAServerSelectToolTip {
            get {
                return ResourceManager.GetString("MenuUAServerSelectToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plug-in files (* .dll)|*.dll|Plug-in files (* .exe)|*.exe|All files (*.*)|*.*.
        /// </summary>
        internal static string OpenPluginFilter {
            get {
                return ResourceManager.GetString("OpenPluginFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open configuration editor.
        /// </summary>
        internal static string OpenPluginTitle {
            get {
                return ResourceManager.GetString("OpenPluginTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open the file.
        /// </summary>
        internal static string OpenPluginWarningNotExist {
            get {
                return ResourceManager.GetString("OpenPluginWarningNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property unavailable.
        /// </summary>
        internal static string PropertyUnavailable {
            get {
                return ResourceManager.GetString("PropertyUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UA Server configuration file.
        /// </summary>
        internal static string UAServerConfigurationTitle {
            get {
                return ResourceManager.GetString("UAServerConfigurationTitle", resourceCulture);
            }
        }
    }
}
